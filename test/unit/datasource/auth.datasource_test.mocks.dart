// Mocks generated by Mockito 5.4.4 from annotations
// in ladder/test/unit/datasource/auth.datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:ladder/api/network/network.service.dart' as _i4;
import 'package:ladder/api/network/parse.networ.response.dart' as _i2;
import 'package:ladder/api/store/ladder.store.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeParsedNetworkResponse_0 extends _i1.SmartFake
    implements _i2.ParsedNetworkResponse {
  _FakeParsedNetworkResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_1<T1> extends _i1.SmartFake implements _i3.Future<T1> {
  _FakeFuture_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i4.NetworkService {
  MockNetworkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.ParsedNetworkResponse> getHttp(
    String? endpoint, {
    Map<String, dynamic>? data,
    dynamic headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHttp,
          [endpoint],
          {
            #data: data,
            #headers: headers,
          },
        ),
        returnValue: _i3.Future<_i2.ParsedNetworkResponse>.value(
            _FakeParsedNetworkResponse_0(
          this,
          Invocation.method(
            #getHttp,
            [endpoint],
            {
              #data: data,
              #headers: headers,
            },
          ),
        )),
      ) as _i3.Future<_i2.ParsedNetworkResponse>);

  @override
  _i3.Future<_i2.ParsedNetworkResponse> post(
    String? endpoint, {
    Map<String, dynamic>? data,
    dynamic headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [endpoint],
          {
            #data: data,
            #headers: headers,
          },
        ),
        returnValue: _i3.Future<_i2.ParsedNetworkResponse>.value(
            _FakeParsedNetworkResponse_0(
          this,
          Invocation.method(
            #post,
            [endpoint],
            {
              #data: data,
              #headers: headers,
            },
          ),
        )),
      ) as _i3.Future<_i2.ParsedNetworkResponse>);

  @override
  _i3.Future<_i2.ParsedNetworkResponse> delete(
    String? endpoint, {
    Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [endpoint],
          {#data: data},
        ),
        returnValue: _i3.Future<_i2.ParsedNetworkResponse>.value(
            _FakeParsedNetworkResponse_0(
          this,
          Invocation.method(
            #delete,
            [endpoint],
            {#data: data},
          ),
        )),
      ) as _i3.Future<_i2.ParsedNetworkResponse>);

  @override
  _i3.Future<_i2.ParsedNetworkResponse> put(
    String? endpoint, {
    Map<String, dynamic>? data,
    dynamic headers,
    bool? isPatch = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [endpoint],
          {
            #data: data,
            #headers: headers,
            #isPatch: isPatch,
          },
        ),
        returnValue: _i3.Future<_i2.ParsedNetworkResponse>.value(
            _FakeParsedNetworkResponse_0(
          this,
          Invocation.method(
            #put,
            [endpoint],
            {
              #data: data,
              #headers: headers,
              #isPatch: isPatch,
            },
          ),
        )),
      ) as _i3.Future<_i2.ParsedNetworkResponse>);
}

/// A class which mocks [HiveStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveStore extends _i1.Mock implements _i5.HiveStore {
  MockHiveStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> deleteItem(
    dynamic key,
    String? boxName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteItem,
          [
            key,
            boxName,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<dynamic>> readAll(String? boxName) => (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [boxName],
        ),
        returnValue: _i3.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i3.Future<List<dynamic>>);

  @override
  _i3.Future<T> readItem<T>(
    dynamic key,
    String? boxName, {
    dynamic defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readItem,
          [
            key,
            boxName,
          ],
          {#defaultValue: defaultValue},
        ),
        returnValue: _i6.ifNotNull(
              _i6.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #readItem,
                  [
                    key,
                    boxName,
                  ],
                  {#defaultValue: defaultValue},
                ),
              ),
              (T v) => _i3.Future<T>.value(v),
            ) ??
            _FakeFuture_1<T>(
              this,
              Invocation.method(
                #readItem,
                [
                  key,
                  boxName,
                ],
                {#defaultValue: defaultValue},
              ),
            ),
      ) as _i3.Future<T>);

  @override
  _i3.Future<void> saveItem<T>(
    T? item,
    String? boxName, {
    String? key,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveItem,
          [
            item,
            boxName,
          ],
          {#key: key},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteAll(String? boxName) => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [boxName],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
